@model cgpay.wallet.shared.Models.DynamicReport.SettlementReportCommon

@{
    ViewBag.Title = "Settlement Report";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@{var BreadCum = cgpay.wallet.application.Library.ApplicationUtilities.GenerateBreadcum("Admin/DynamicReport/SettlementReport", "Report", ControllerDisplayName: "Settlement Report");}

@section BreadCum{
    <style>
        .pull-right {
            float: right;
            margin-left: auto;
        }
    </style>
    @Html.Raw(BreadCum)
}

@if (@ViewBag.EmptyMessage == "True")
{
    <div class="alert bg-warning alert-styled-left alert-dismissible">
        <strong>Mobile Number Not Found</strong>
    </div>
}

<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("SettlementReport", "DynamicReport", new { }, FormMethod.Post, new { @role = "form" }))
        {
            @Html.AntiForgeryToken()
            <fieldset class="mb-3">
                <div class="row">
                    @Html.NTextBoxFor(model => model.MobileNumber, new { @class = "form-control", autocomplete = "off", @maxlength = "10", @onkeypress = "return isNumberKey(event)" }, 3)
                </div>
                <div class="row">
                    @Html.NTextBoxFor(model => model.FromDate, new { @class = "form-control", autocomplete = "off" }, 3)
                    @Html.NTextBoxFor(model => model.ToDate, new { @class = "form-control", autocomplete = "off" }, 3)
                </div>
                <div class="row">
                    @Html.NTextBoxFor(model => model.NepFromDate, new { @class = "form-control", autocomplete = "off" }, 3)
                    @Html.NTextBoxFor(model => model.NepToDate, new { @class = "form-control", autocomplete = "off" }, 3)
                </div>
                <div class="row">
                    <div class="col-md-6" style="float:left">
                        <input type="submit" class="btn btn-primary" id="btnSearch" name="txtSearch" value="Search" />
                    </div>
                </div>
            </fieldset>
        }
    </div>
</div>

@if (ViewData["grid"] != null)
{
    @Html.Raw(ViewData["grid"].ToString());
}

<script>
    function isNumberKey(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    $(document).ready(function () {

        var NepalDateToday = NepaliFunctions.ConvertDateFormat(NepaliFunctions.GetCurrentBsDate());
        var yearRangeDOB = "1944:-10"; //"1944:+0";
        var yearRangeExpire = "1944:+10"; //"1944:+20";
        var minimum = "[1943, 04, 14]";
        var dateFormat = "yy-mm-dd";
        $("#FromDate").datepicker({
            dateFormat: dateFormat,
            maxDate: new Date,
            changeMonth: true,
            changeYear: true,
            autoSize: true
        }).attr('readonly', 'readonly');

        $("#ToDate").datepicker({
            dateFormat: dateFormat,
            maxDate: new Date,
            changeMonth: true,
            changeYear: true,
            autoSize: true
        }).attr('readonly', 'readonly');

        $("#NepFromDate").nepaliDatePicker({
            ndpYear: true,
            ndpMonth: true,
            //defaultDate: /*nepaliDOB*/,
            readOnlyInput: true,
            ndpEnglishInput: 'FromDate',
            disableAfter: NepalDateToday,
            onChange: function () {
                $('#NepFromDate').removeClass("input-validation-error");
                if ($('#NepFromDate-error').length > 0) {
                    $('#NepFromDate-error').html("");
                };
                $('#FromDate').removeClass("input-validation-error");
                if ($('#FromDate-error').length > 0) {
                    $('#FromDate-error').html("");
                }
            }
        });
        $('#NepToDate').nepaliDatePicker({
            ndpYear: true,
            ndpMonth: true,
            readOnlyInput: true,
            ndpEnglishInput: 'ToDate',
            disableAfter: NepalDateToday,
            onChange: function () {
                $('#NepToDate').removeClass("input-validation-error");
                if ($('#NepToDate-error').length > 0) {
                    $('#NepToDate-error').html("");
                };
                $('#ToDate').removeClass("input-validation-error");
                if ($('#ToDate-error').length > 0) {
                    $('#ToDate-error').html("");
                }
            }

        });

        getvisibleColumn = [0, 1, 2, 3, 4, 5, 6];
        getTotalOfColumns = [4, 5, 6];
        showDateTableWithExcelTotal("datatable-total", getTotalOfColumns, true, getvisibleColumn);
    });

    $('#FromDate').change(function () {
        var dateObj = NepaliFunctions.ConvertToDateObject($('#FromDate').val(), "YYYY-MM-DD");
        $('#NepFromDate').val(NepaliFunctions.ConvertDateFormat(NepaliFunctions.AD2BS(dateObj)));
        $('#FromDate').removeClass("input-validation-error");
        if ($('#FromDate-error').length > 0) {
            $('#FromDate-error').html("");
        }
        $('#NepFromDate').removeClass("input-validation-error");
        if ($('#NepFromDate-error').length > 0) {
            $('#NepFromDate-error').html("");
        }
    });

    $('#ToDate').change(function () {
        var dateObj = NepaliFunctions.ConvertToDateObject($('#ToDate').val(), "YYYY-MM-DD");
        $('#NepToDate').val(NepaliFunctions.ConvertDateFormat(NepaliFunctions.AD2BS(dateObj)));
        $('#ToDate').removeClass("input-validation-error");
        if ($('#ToDate-error').length > 0) {
            $('#ToDate-error').html("");
        }
        $('#NepToDate').removeClass("input-validation-error");
        if ($('#NepToDate-error').length > 0) {
            $('#NepToDate-error').html("");
        }
    });

</script>
