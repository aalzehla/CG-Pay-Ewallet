@*@model cgpay.wallet.shared.Models.AgentManagement.AgentManagementCommon*@
@model cgpay.wallet.application.Models.AgentUserRole

@{
    ViewBag.Title = "ViewAgentUser";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@Html.AntiForgeryToken()
<div class="page-header">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4><i class=""> </i> <span class="font-weight-semibold"></span> Users </h4>
            <a href="~/Admin/Agent/" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>

        <div class="header-elements d-none py-0 mb-3 mb-md-0">
            <div class="breadcrumb">
                <a href="~/AgentManagement/Index" class="breadcrumb-item"><i class="icon-home2 mr-2"></i>Index</a>
                <span class="breadcrumb-item active">@Html.Raw(ViewData["Title"])</span>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.Raw(ViewData["grid"].ToString())

</div>

<div>
    <div class="modal fade" id="AssignModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         style="display: none;" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">
                        Assign Role
                    </h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                @using (Html.BeginForm("AssignRole", "AgentManagement", new { }, FormMethod.Post, new { @role = "form", @id = "RetrieveTransfer" }))
                {
                    //string check = null;
                    //if (Model.IsPrimary != null && Model.IsPrimary.Trim().ToLower() == "y")
                    //{
                    //    check = "checked";
                    //}
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(c => c.AgentID)
                    @Html.HiddenFor(c => c.UserID)
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.IsPrimary, "Is Primary", new { @class = "label", autocomplete = "off" })
                                <div class="form-check form-check-switchery form-check-switchery-double">
                                    <label class="form-check-label">
                                        No
                                        <input type="checkbox" class="form-input-switchery" data-fouc data-switchery="true" style="display: none;" id="IsPrimaryCheckbox" name="IsPrimary" />
                                        @*<input type="checkbox" class="form-input-switchery" data-fouc data-switchery="true" @Html.Raw(check) style="display: none;" id="IsPrimary" name="IsPrimary" />*@
                                        Yes
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose">Close</button>
                            <button type="submit" class="btn btn-primary"> Save</button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>
<script>
    $('.icon-lock2').parent().on('click', function e() {
        /*debugger*/;
        let i = $(this).attr("data-val");
        let ii = $(this).attr("data-val1");
        let tId = $(this).closest("tr").attr("id");
        jsonData = "{" +
            "__RequestVerificationToken: '" + $('input[name="__RequestVerificationToken"]').val() + "'," +
            "userid:'" + i + "'," + "agentid:'" + ii + "'}";
        var funcText = "CallAjaxDbResponse(" + jsonData + ",'/Admin/AgentManagement/BlockUser','POST',true,'window.location.reload();')";
        showConfirmationModal("Are you sure you want to Block this user?", funcText);
    });
    $('.icon-unlocked2').parent().on('click', function e() {
        /*debugger*/;
        let i = $(this).attr("data-val");
        let ii = $(this).attr("data-val1");
        let tId = $(this).closest("tr").attr("id");
        jsonData = "{" +
            "__RequestVerificationToken: '" + $('input[name="__RequestVerificationToken"]').val() + "'," +
            "userid:'" + i + "'," + "agentid:'" + ii + "'}";
        var funcText = "CallAjaxDbResponse(" + jsonData + ",'/Admin/AgentManagement/UnBlockUser','POST',true,'window.location.reload();')";
        showConfirmationModal("Are you sure you want to Un-Block this user?", funcText);
    });
    $('.icon-key').parent().on('click', function e() {
        debugger;
        //var agentId = $(this).attr("data-val");
        var userId = $(this).attr("data-val");
        var agentId = $(this).attr("data-val1");
        jsonData = "{" +
            "__RequestVerificationToken: '" + $('input[name="__RequestVerificationToken"]').val() + "'," +
            "userid:'" + userId + "'," + "agentid:'" + agentId + "'}";
        var funcText = "CallAjaxDbResponse(" + jsonData + ",'/Admin/AgentManagement/ResetPassword','POST',true,'window.location.reload();')";
        showConfirmationModal("Are you sure you want to Reset Password?", funcText);
    });

    function assignRole(UserId, AgentId, IsPrimary) {
        debugger;
        $("#IsPrimary").val(IsPrimary);
        $("#AgentID").val(AgentId);
        $("#UserID").val(UserId);
        if (IsPrimary.toUpperCase() == "Y") {
            $('#IsPrimaryCheckbox').prop("checked", true);
        }
        else {
            $('#IsPrimaryCheckbox').prop("checked", false);
        }
        $("#AssignModel").modal();
    }
</script>



