@model cgpay.wallet.application.Models.ChangePasswordModel

@{
    ViewBag.Title = "View Users";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-arrow-left52 mr-2"></i> <span class="font-weight-semibold">User</span> - @Html.Raw(ViewData["Title"])</h4>
            <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>

        <div class="header-elements d-none py-0 mb-3 mb-md-0">
            <div class="breadcrumb">
                <a href="~/Admin/Home" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                <span class="breadcrumb-item active">@Html.Raw(ViewData["Title"])</span>
            </div>
        </div>
    </div>
</div>
<div>
    @Html.Raw(ViewData["grid"].ToString())

    <div>
        <div class="modal fade" id="AssignModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
             style="display: none;" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">
                            Assign Role
                        </h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    @using (Html.BeginForm("AssignRole", "User", new { ReturnUrl = "Index" }, FormMethod.Post, new { @id = "AssignRole" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="modal-body">
                            <div class="row">
                                @Html.HiddenFor(model => model.UserNameRole)
                                @Html.NTextBoxFor(model => model.RoleName, new { @class = "form-control", autocomplete = "off" }, 1, disable: true)
                                @Html.NDropDownListFor(model => model.RoleId, new SelectList(ViewBag.Roles, "Value", "Text"), new { @class = "form-control", autocomplete = "off" }, 1)
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-md-12 ">
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose">
                                    Close
                                </button>
                                <button type="submit" class="btn btn-primary"> Save</button>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
    <div>
        <div class="modal fade" id="ChangePassword" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
             style="display: none;" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="ModalTitle">Change Password</h4>
                        @*<a href="#" class="close" data-dismiss="modal">&times;</a>*@
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                        @*<h4 class="modal-title" id="myChangePassword">
                Change Password
            </h4>*@
                    </div>
                    @using (Html.BeginForm("ChangeuserPassword", "User", new { ReturnUrl = "Index" }, FormMethod.Post, new { @id = "ChangeuserPassword" }))
                    {
                        @Html.AntiForgeryToken()


                        @Html.HiddenFor(model => model.UserNamePassword)

                        <div class="modal-body">
                            <div class="row">
                                @Html.NTextBoxFor(model => model.Password, new { @class = "form-control", autocomplete = "off", @type = "password" }, 1)
                                @Html.NTextBoxFor(model => model.ConfirmPassword, new { @class = "form-control", autocomplete = "off", @type = "password" }, 1)

                                @*<p> Are You Sure You Want To Change The Password?</p>*@
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary"> Yes</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose">
                                    No
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    @*<div>
            <div class="modal fade" id="ChangePassword" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
                 style="display: none;" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                            <h4 class="modal-title" id="myChangePassword">
                                Change Password
                            </h4>
                        </div>
                        @using (Html.BeginForm("Changeuserpassword", "User", new { ReturnUrl = "Index" }, FormMethod.Post, new { @id = "ChangeuserPassword" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="modal-body">
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-12 ">
                                            @Html.Hidden("userId");
                                            <p> Are You Sure You Want To Change The Password?</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-primary"> Yes</button>
                                    <button type="button" class="btn btn-default" data-dismiss="modal" id="btnClose">
                                        No
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>*@
</div>
<script>
    $('.icon-lock2').parent().on('click', function e() {
        let i = $(this).attr("data-val");
        let tId = $(this).closest("tr").attr("id");
        jsonData = "{" +
            "__RequestVerificationToken: '" + $('input[name="__RequestVerificationToken"]').val() + "'," +
            "UserId:'" + i + "'}";
        var funcText = "CallAjaxDbResponse(" + jsonData + ",'/Admin/User/BlockUser','POST',false,'window.location.reload();')";
        showConfirmationModal("Are you sure you want to Block this user?", funcText);
    });
    $('.icon-unlocked2').parent().on('click', function e() {
        let i = $(this).attr("data-val");
        jsonData = "{" +
            "__RequestVerificationToken: '" + $('input[name="__RequestVerificationToken"]').val() + "'," +
            "UserId:'" + i + "'}";
        var funcText = "CallAjaxDbResponse(" + jsonData + ",'/Admin/User/UnBlockUser','POST',false,'window.location.reload();')";
        showConfirmationModal("Are you sure you want to Un-Block this user?", funcText);
    });

    $('.icon-trash').parent().on('click',
        function e() {
            //debugger;
            var userName = $(this).attr("data-val");
            //var status = $(this).attr("data-val1");
            jsonData = "{" +
                "__RequestVerificationToken: '" +
                $('input[name="__RequestVerificationToken"]').val() +
                "'," +
                "UserName:'" +
                userName +
                "'}";
            var funcText = "CallAjaxDbResponse(" +
                jsonData +
                ",'/Admin/User/DeleteUser','POST',true,'')";
            showConfirmationModal("Are you sure you want to Delete this user?", funcText);
        });

    function changePassword(userName) {
        //debugger;
        $("#UserNamePassword").val(userName);
        $("#ChangePassword").modal();
    }
    function assignRole(userName, roleName) {
        //debugger;
        $("#UserNameRole").val(userName);
        $("#RoleName").val(roleName);
        $("#AssignModel").modal();
    }
</script>
